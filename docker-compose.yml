version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --accesslog=true
      - --accesslog.format=json
      - --log.level=DEBUG
      - --metrics.prometheus=true
      - --metrics.prometheus.entrypoint=:8082
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard de Traefik
      - "8082:8082"  # MÃ©tricas Prometheus
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always

  nginx:
    image: nginx:alpine
    container_name: nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.nginx-ratelimit.ratelimit.average=2"
      - "traefik.http.middlewares.nginx-ratelimit.ratelimit.burst=1"
      - "traefik.http.middlewares.nginx-ratelimit.ratelimit.sourcecriterion.ipstrategy.depth=1"
      - "traefik.http.routers.nginx.rule=Host(`nginx.localhost`)"
      - "traefik.http.routers.nginx.entrypoints=web"
      - "traefik.http.routers.nginx.middlewares=nginx-ratelimit"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
    restart: always
    depends_on:
      - traefik

  api:
    build: ./api
    deploy:
      replicas: 3
    environment:
      - NODE_ENV=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.middlewares=auth,strip-api"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.auth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/,test2:$$apr1$$d9hr9HBB$$4HxwgUir3HP4EsggP/QNo0"
      - "traefik.http.middlewares.strip-api.stripprefix.prefixes=/api"
    restart: always
    depends_on:
      - traefik

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always
    depends_on:
      - traefik

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      - prometheus

